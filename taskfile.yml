version: '3'
dotenv: ['VERSION']
vars:
  APP_NAME: "plan"
  BIN_DIR: "$HOME/.local/bin"
  RELEASE_DIR: ".build/release"
  SWIFT_VERSION: "5.10"
tasks:
  run:
    cmds:
      - swift run {{.APP_NAME}} next
    silent: true
  build:
    watch: true
    sources:
      - '**/*.swift'
    cmds:
      - swift build
    silent: true
  test:
    cmds:
      - swift test
    silent: true
  format:
    cmds:
      - swiftformat --swiftversion {{.SWIFT_VERSION}} Package.swift Sources Tests
    silent: true
  lint:
    cmds:
      - swiftlint
    silent: true
  artifacts:
    deps: [test, lint]
    env:
      CURRENT_HASH:
        sh: git rev-parse --short HEAD
    cmds:
      - sed -i '' "s/APP_VERSION/$APP_VERSION-$CURRENT_HASH/g" Sources/Version.swift
      - swift build -Xswiftc -warnings-as-errors --configuration release --disable-sandbox --arch arm64
      - git checkout Sources/Version.swift
    silent: true
  install:
    requires:
      vars: [APP_NAME, BIN_DIR]
    deps: [artifacts]
    cmds:
      - mkdir -p "{{.BIN_DIR}}"
      - cp "{{.RELEASE_DIR}}/{{.APP_NAME}}" "{{.BIN_DIR}}"
  uninstall:
    requires:
      vars: [APP_NAME, BIN_DIR]
    cmds:
      - rm -rf "{{.BIN_DIR}}/{{.APP_NAME}}"
    silent: true
  tar:
    deps: [artifacts]
    cmds:
      - cp {{.RELEASE_DIR}}/{{.APP_NAME}} {{.RELEASE_DIR}}/{{.APP_NAME}}-darwin-arm64
      - tar -czf {{.RELEASE_DIR}}/plan-"$(echo "$APP_VERSION" | cut -c2-)".tar.gz -C .build/release {{.APP_NAME}}-darwin-arm64 "Completions/"
  tag:
    deps: [tar]
    cmds:
      - git tag "$APP_VERSION"
      - git push origin "$APP_VERSION"
  release:
    requires:
      vars: [APP_NAME, RELEASE_DIR]
    cmds:
      - /opt/homebrew/bin/gh auth status
      - /opt/homebrew/bin/gh release create --generate-notes "$APP_VERSION" {{.RELEASE_DIR}}/plan-"$(echo "$APP_VERSION" | cut -c2-)".tar.gz
  sha:
    requires:
      vars: [APP_NAME, RELEASE_DIR]
    cmds:
      - sha256sum {{.RELEASE_DIR}}/{{.APP_NAME}}-*
  clean:
    cmds:
      - rm -rf .build
    silent: true
